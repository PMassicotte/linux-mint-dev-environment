[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Setting up my working environment",
    "section": "",
    "text": "These are simply a list of notes for my self to setup my development environment on Ubuntu derivative (like Linux Mint) so I do not have to spend much time when I format or setup a new computer."
  },
  {
    "objectID": "terminal.html",
    "href": "terminal.html",
    "title": "1  My terminal set-up",
    "section": "",
    "text": "Setting up my terminal environment. The dimensions of my terminal is 150 columns by 35 rows."
  },
  {
    "objectID": "terminal.html#fonts",
    "href": "terminal.html#fonts",
    "title": "1  My terminal set-up",
    "section": "1.1 Fonts",
    "text": "1.1 Fonts\n\n1.1.1 JetBrains font\nFor my daily to go programming font.\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/install_manual.sh)\"\n\n\n1.1.2 Meslo Nerd font (for Powerlevl10k)\nGot on this page and download and install the .ttf files."
  },
  {
    "objectID": "terminal.html#zsh",
    "href": "terminal.html#zsh",
    "title": "1  My terminal set-up",
    "section": "1.2 zsh",
    "text": "1.2 zsh\nsudo apt install zsh\n\n1.2.1 oh-my-zsh\nInstall oh-my-zsh\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n\n\n1.2.2 power10k theme\nPowerlevel10k theme\ngit clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\nThen, set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc and configure the theme as follow:\np10k configure"
  },
  {
    "objectID": "terminal.html#useful-tools",
    "href": "terminal.html#useful-tools",
    "title": "1  My terminal set-up",
    "section": "1.3 Useful tools",
    "text": "1.3 Useful tools\nFor some of these tools, rust needs to be installed.\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n1.3.1 tldr\nsudo apt install tldr\ntldr --update\n\n\n1.3.2 exa\ncargo install exa \n\n\n1.3.3 bat\ncargo install bat \n\n\n1.3.4 Creating alias\nnano ~/.zshrc \nAdd these alias to the file.\nalias ls='exa --icons'\nalias l='exa'\nalias la='exa -a'\nalias ll='exa -lahF --icons'\nalias cat=bat\n\n\n1.3.5 fzf\nfzf is a command-line fuzzy finder.\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n~/.fzf/install\nThen, set plugins=(fzf) in ~/.zshrc.\n\n\n1.3.6 The Silver Searcher\nThe Silver Searcher\nsudo apt-get install silversearcher-ag\n\n\n1.3.7 ripgrep\nhttps://github.com/BurntSushi/ripgrep\nEasier to use to me.\nrg read.csv -g \"*.R\""
  },
  {
    "objectID": "neovim.html",
    "href": "neovim.html",
    "title": "2  Neovim",
    "section": "",
    "text": "sudo add-apt-repository ppa:neovim-ppa/stable \nsudo apt update\n\nsudo apt install neovim"
  },
  {
    "objectID": "neovim.html#install-packer",
    "href": "neovim.html#install-packer",
    "title": "2  Neovim",
    "section": "2.2 Install packer",
    "text": "2.2 Install packer\nPacker plugin/package management for Neovim\ngit clone --depth 1 https://github.com/wbthomason/packer.nvim\\\n ~/.local/share/nvim/site/pack/packer/start/packer.nvim\nThen go in ~/.config and clone the configuration files:\ngit clone git@github.com:PMassicotte/nvim.git\nFrom neovim, update the plugins:\n:PackerSync\n:PackerUpdate"
  },
  {
    "objectID": "gis.html",
    "href": "gis.html",
    "title": "3  QGIS and gdal",
    "section": "",
    "text": "Linux Mint is a bit behind for all the GIS stuff. I had problems (ex.: open cloud optimized geotiff on internet) with a old version of gdal that comes with Mint.\nTo update to a newer version of gdal, install this PPA:\nsudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nsudo apt update\nThen, the latest version of QGIS:\nwget -qO - https://qgis.org/downloads/qgis-2021.gpg.key | sudo gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/qgis-archive.gpg --import\n\nsudo chmod a+r /etc/apt/trusted.gpg.d/qgis-archive.gpg\n\nsudo add-apt-repository \"deb https://qgis.org/ubuntu $(lsb_release -c -s) main\"\n\nsudo apt update\n\nsudo apt install qgis qgis-plugin-grass\nNot tested: use focal, because $(lsb_release -c -s) returns una as codename.\nsudo add-apt-repository \"deb https://qgis.org/ubuntu focal main\""
  },
  {
    "objectID": "gis.html#gdal",
    "href": "gis.html#gdal",
    "title": "3  QGIS and gdal",
    "section": "3.2 GDAL",
    "text": "3.2 GDAL\nDownload the latest version of gdal. Then configure and install:\n./configure --with-python --with-pg --with-geos\nmake -j24\nsudo make install"
  },
  {
    "objectID": "gis.html#see-also",
    "href": "gis.html#see-also",
    "title": "3  QGIS and gdal",
    "section": "3.3 See also",
    "text": "3.3 See also\n\nhttps://rtask.thinkr.fr/installation-of-r-4-2-on-ubuntu-22-04-lts-and-tips-for-spatial-packages/"
  },
  {
    "objectID": "installr.html",
    "href": "installr.html",
    "title": "4  Installing R",
    "section": "",
    "text": "Note: Before installing R, make sure that you have the latest gdal, geos libraries installed so terra, sf and other R packages compile correctly."
  },
  {
    "objectID": "installr.html#installing-the-latest-r-version",
    "href": "installr.html#installing-the-latest-r-version",
    "title": "4  Installing R",
    "section": "4.1 Installing the latest R version",
    "text": "4.1 Installing the latest R version\nThese instructions are from how to set up R on Ubuntu.\nFirst, open sources.list:\nsudo nano /etc/apt/sources.list\nThen add this:\ndeb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nsudo apt install libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libcairo2-dev\nFinally, install R:\nsudo apt update\nsudo apt install r-base"
  },
  {
    "objectID": "installr.html#installing-r-binaries-for-ubuntu",
    "href": "installr.html#installing-r-binaries-for-ubuntu",
    "title": "4  Installing R",
    "section": "4.2 Installing R binaries for Ubuntu",
    "text": "4.2 Installing R binaries for Ubuntu\nFirst, install rspm:\nremotes::install_github(\"Enchufa2/rspm\")\nThen, edit .Rprofile:\nusethis::edit_r_profile()\nAnd add this:\nrspm::enable() # wrap it in suppressMessages() to avoid the initial message"
  },
  {
    "objectID": "installr.html#using-rig",
    "href": "installr.html#using-rig",
    "title": "4  Installing R",
    "section": "4.3 Using rig",
    "text": "4.3 Using rig\nrig a tool to manage different version of R installation on your computer.\nTo install it (note that the destination path is not the same as the one shown on the rig website because R was installed in /usr/ and not /usr/local/):\ncurl -Ls curl -Ls https://github.com/r-lib/rig/releases/download/v0.5.0/rig-linux-0.5.0.tar.gz | sudo tar xz -C /usr/\nOnce installed, one can install different versions of R like so:\nrig add 4.1.0\nrig add 4.2.0\nStarting RStudio with a specific version of R can be done with:\nrig rstudio 4.1.0\nIt is also possible to start RStudio with a specific version of R that is defined in the renv lcok file:\nrig rstudio <renv-lockfile>"
  },
  {
    "objectID": "installr.html#rstudio",
    "href": "installr.html#rstudio",
    "title": "4  Installing R",
    "section": "4.4 RStudio",
    "text": "4.4 RStudio\n\n4.4.1 Installing themes\ndevtools::install_github(\"gadenbuie/rsthemes\")\nThese can be visualized with:\nrsthemes::try_rsthemes()"
  },
  {
    "objectID": "installr.html#compiling-r-with-intel-mkl-math-libraries",
    "href": "installr.html#compiling-r-with-intel-mkl-math-libraries",
    "title": "4  Installing R",
    "section": "4.5 Compiling R with Intel MKL math libraries",
    "text": "4.5 Compiling R with Intel MKL math libraries\n\n4.5.1 Install Intel MKL\ncd /tmp\nwget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB\n\nsudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB\nsudo sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'\n\nsudo apt install intel-mkl-64bit-2020.1-102 \n\nsource /opt/intel/mkl/bin/mklvars.sh intel64\n\n\n4.5.2 Compile R with MKL\nDownload and decompress R source files.\ntar -zxvf R-4.0.0.tar.gz\n./configure --enable-R-shlib --enable-threads=posix --with-x=yes --with-cairo --with-libpng --with-libtiff --with-jpeglib --with-lapack --with-blas=\"-fopenmp -m64 -I/opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/include -L/opt/intel/compilers_and_libraries_2020.4.304/linux/mkl/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm\"\n\n./configure --enable-R-shlib --enable-threads=posix --with-x=yes --with-cairo --with-libpng --with-libtiff --with-jpeglib --with-lapack --with-blas=\"-fopenmp -m64 -I$MKLROOT/include -L$MKLROOT/lib/intel64 -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread -lm\" --libdir=/usr/bin\n\nmake -j24\nmake pdf\nmake info\nmake install\nmake install-info\nmake install-pdf\n\nsudo make install\n\n\n4.5.3 Ressources\n\nhttps://www.r-bloggers.com/compiling-r-3-0-1-with-mkl-support/\nhttps://software.intel.com/content/www/us/en/develop/articles/installing-intel-free-libs-and-python-apt-repo.html\nhttps://software.intel.com/content/www/us/en/develop/articles/using-intel-mkl-with-r.html"
  },
  {
    "objectID": "vscode.html",
    "href": "vscode.html",
    "title": "5  Visual Studio Code",
    "section": "",
    "text": "On Linux Mint, the default R installation directory is not the same as on Ubuntu. I have configured VScode to use the R bin installation directory of Ubuntu. Hence, on Mint, code completion, help viewer are not working. The simple work around is to create a symbolic link?\nsudo ln -s /usr/bin/R /usr/local/bin/R"
  },
  {
    "objectID": "nemo.html",
    "href": "nemo.html",
    "title": "6  Nemo",
    "section": "",
    "text": "This will make pressing F4 top open the Nemo file manager.\nInformation found here.\n\nCreate this folder and this file:\nmkdir -p ~/.gnome2/accels\nnvim ~/.gnome2/accels/nemo\nAdd this to the file:\n(gtk_accel_path \"<Actions>/DirViewActions/OpenInTerminal\" \"F4\")"
  },
  {
    "objectID": "misc.html",
    "href": "misc.html",
    "title": "7  Misc",
    "section": "",
    "text": "https://raw.githubusercontent.com/hotice/webupd8/master/install-google-fonts\n\n# Original author: Michalis Georgiou <mechmg93@gmail.comr>\n# Modified by Andrew http://www.webupd8.org <andrew@webupd8.org>\n\n_wgeturl=\"https://github.com/google/fonts/archive/master.tar.gz\"\n_gf=\"google-fonts\"\n\n# install wget\nsudo apt-get install wget\n\n# make sure a file with the same name doesn't already exist\nrm -f $_gf.tar.gz\n\necho \"Connecting to Github server...\"\nwget $_wgeturl -O $_gf.tar.gz\n\necho \"Extracting the downloaded archive...\"\ntar -xf $_gf.tar.gz\n\necho \"Creating the /usr/share/fonts/truetype/$_gf folder\"\nsudo mkdir -p /usr/share/fonts/truetype/$_gf\n\necho \"Installing all .ttf fonts in /usr/share/fonts/truetype/$_gf\"\nfind $PWD/fonts-main/ -name \"*.ttf\" -exec sudo install -m644 {} /usr/share/fonts/truetype/google-fonts/ \\; || return 1\n\necho \"Updating the font cache\"\nfc-cache -f > /dev/null\n\n# clean up, but only the .tar.gz, the user may need the folder\nrm -f $_gf.tar.gz\n\necho \"Done.\""
  }
]