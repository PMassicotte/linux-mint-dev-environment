# Misc

## Installing Google fonts

- [Script to install Google Fonts](https://raw.githubusercontent.com/hotice/webupd8/master/install-google-fonts)

```bash
# Original author: Michalis Georgiou <mechmg93@gmail.comr>
# Modified by Andrew http://www.webupd8.org <andrew@webupd8.org>

_wgeturl="https://github.com/google/fonts/archive/master.tar.gz"
_gf="google-fonts"

# install wget
sudo apt-get install wget

# make sure a file with the same name doesn't already exist
rm -f $_gf.tar.gz

echo "Connecting to Github server..."
wget $_wgeturl -O $_gf.tar.gz

echo "Extracting the downloaded archive..."
tar -xf $_gf.tar.gz

echo "Creating the /usr/share/fonts/truetype/$_gf folder"
sudo mkdir -p /usr/share/fonts/truetype/$_gf

echo "Installing all .ttf fonts in /usr/share/fonts/truetype/$_gf"
find $PWD/fonts-main/ -name "*.ttf" -exec sudo install -m644 {} /usr/share/fonts/truetype/google-fonts/ \; || return 1

echo "Updating the font cache"
fc-cache -f >/dev/null

# clean up, but only the .tar.gz, the user may need the folder
rm -f $_gf.tar.gz

echo "Done."
```

## Swapiness (swap usage)

Change the value of the `swapiness`, so the kernel use memory primarily instead of the disk.

- [How to change the swapiness](https://askubuntu.com/questions/157793/why-is-swap-being-used-even-though-i-have-plenty-of-free-ram)

## Zotero

### Installation

https://linux.how2shout.com/how-to-install-zotero-on-ubuntu-22-04-or-20-04-lts/

```r
curl -sL https://raw.githubusercontent.com/retorquere/zotero-deb/master/install.sh | sudo bash
sudo apt update
sudo apt install zotero
```

### Citation key

- Use better bibtex and set the citation key format as `auth.capitalize+year`.

![](images/zotero.png)

## act

[Run your GitHub Actions locally!](https://github.com/nektos/act)

## Make using multiple cores

Open the `.zshrc` file and set the number of core to be used with `make`. This will also work when [installing R packages from source](https://stackoverflow.com/questions/36725027/r-package-installation-from-source-using-multiple-cores).

```bash
nvim ~/.zshrc
export MAKE="make -j24"
```

R packages will install much faster.

## Image viewer

- [Nomacs](https://github.com/nomacs/nomacs?ref=itsfoss.com)

## duckdb

https://duckdb.org/docs/installation/index

```bash
wget https://github.com/duckdb/duckdb/releases/download/v1.0.0/duckdb_cli-linux-amd64.zip
sudo unzip duckdb_cli-linux-amd64.zip -d /usr/local/bin/
rm duckdb_cli-linux-amd64.zip
```

### Using duckfetch

To install it from crates.io:

```bash
cargo install duckfetch
```

Or the development version:

```bash
cargo install --git https://github.com/pmassicotte/duckfetch
```

## Keyboard

- Configure using VIA: https://github.com/the-via/releases/releases/
- https://config.qmk.fm/#/test
- http://keyboards.jargon-file.org/

Download this [file](http://keyboards.jargon-file.org/altinter.klc):

```bash
sudo cp altinter.klc /usr/share/X11/xkb/symbols/
```

Update the XKB configuration: After copying the file, you may need to update the XKB configuration cache. You can do this by running:

```bash
sudo dpkg-reconfigure xkb-data
```

Not, the dead key is set up to AtlGr (right Alt).

![](images/keyboard_input_lang.png)

## cbonsai

```bash
cbonsai -l -i -p -m "Be right back"
```

## Everforest cursor

https://github.com/talwat/everforest-cursors

## Zen browser

Install with:

```bash
bash <(curl https://updates.zen-browser.app/appimage.sh)
```
